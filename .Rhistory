show_html(df)
#tab <- table(df)
#tab
Time.spent.Mode.1 <- c(33.3, 52.2, 64.7, 137, 125.9, 116.3, 131.7, 85, 91.9)
Time.spent.Mode.2 <- c(25.3, 14.4, 32.5, 20.5, 97.6, 53.6, 56.6, 87.3, 47.8)
Number.of.failures <- c(15,9,14,24,27,27,23,18,22)
df <- data.frame("Time spent in Mode 1"= Time.spent.Mode.1, "Time spent in Mode 2"= Time.spent.Mode.2, "Number of failures"=Number.of.failures)
Time.spent.Mode.1 <- c(33.3, 52.2, 64.7, 137, 125.9, 116.3, 131.7, 85, 91.9)
Time.spent.Mode.2 <- c(25.3, 14.4, 32.5, 20.5, 97.6, 53.6, 56.6, 87.3, 47.8)
Number.of.failures <- c(15,9,14,24,27,27,23,18,22)
df <- data.frame("Time spent in Mode 1"= Time.spent.Mode.1, "Time spent in Mode 2"= Time.spent.Mode.2, "Number of failures"=Number.of.failures)
Time.spent.Mode.1 <- c(33.3, 52.2, 64.7, 137, 125.9, 116.3, 131.7, 85, 91.9)
Time.spent.Mode.2 <- c(25.3, 14.4, 32.5, 20.5, 97.6, 53.6, 56.6, 87.3, 47.8)
Number.of.failures <- c(15,9,14,24,27,27,23,18,22)
df <- data.frame("Time spent in Mode 1"= Time.spent.Mode.1, "Time spent in Mode 2"= Time.spent.Mode.2, "Number of failures"=Number.of.failures)
df
?plot
plot(df$Time.spent.in.Mode.1, df$Number.of.failures)
plot(df$Number.of.failures,df$Time.spent.in.Mode.1)
plot(x=df$Number.of.failures,y=df$Time.spent.in.Mode.1, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(x=df$Time.spent.in.Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
nof <- df$Number.of.failures
time.mode.1 <- df$Time.spent.in.Mode.1
plot(time.mode.1~nof, data=df,las=1,main="Try identiy link function")
nof <- df$Number.of.failures
time.mode.1 <- df$Time.spent.in.Mode.1
plot(time.mode.1~nof, data=df,las=1,main="Try identiy link function")
lines(time.mode.1~nof,lwd=2)
nof <- df$Number.of.failures
time.mode.1 <- df$Time.spent.in.Mode.1
plot(x=time.mode.1, y=nof,las=1,main="Try identiy link function")
lines(time.mode.1~nof,lwd=2)
nof <- df$Number.of.failures
time.mode.1 <- df$Time.spent.in.Mode.1
plot(x=time.mode.1, y=nof,las=1,main="Try identiy link function")
lines(time.mode.1~nof,lwd=2)
nof <- df$Number.of.failures
time.mode.1 <- df$Time.spent.in.Mode.1
plot(x=time.mode.1, y=nof,las=1,main="Try identiy link function")
nof <- df$Number.of.failures
time.mode.1 <- df$Time.spent.in.Mode.1
plot(time.mode.1~nof,las=1,main="Try identiy link function")
nof <- df$Number.of.failures
time.mode.1 <- df$Time.spent.in.Mode.1
plot(nof~time.mode.1, data=df,las=1,main="Try identiy link function")
?gestation
??gestation
library(GLMsData)
data(gestation)
d <- data(gestation)
summary(d)
head(d)
d
data(gestation)
summary(gestation)
head(gestation)
df
Time.spent.Mode.1 <- c(33.3, 52.2, 64.7, 137, 125.9, 116.3, 131.7, 85, 91.9)
Time.spent.Mode.2 <- c(25.3, 14.4, 32.5, 20.5, 97.6, 53.6, 56.6, 87.3, 47.8)
Number.of.failures <- c(15,9,14,24,27,27,23,18,22)
df <- data.frame("Mode 1"= Time.spent.Mode.1, "Mode 2"= Time.spent.Mode.2, "Number of failures"=Number.of.failures)
df
library(GLMsData)
data(gestation)
gestation
plot(Numbef.of.failures ~ Mode.1, data=df,las=1,main="Try identiy link function")
plot(Number.of.failures ~ Mode.1, data=df,las=1,main="Try identiy link function")
plot(Number.of.failures ~ Mode.1, data=df, type="n", las=1,main="Try identiy link function")
plot(Number.of.failures ~ Mode.1, data=df, type="l", las=1,main="Try identiy link function")
plot(Number.of.failures ~ Mode.1, data=df, las=1,main="Try identiy link function")
fit.identity <- lm(Numbef.of.failures ~ Mode.1, data=df)
fit.identity <- lm(Number.of.failures ~ Mode.1, data=df)
plot(Number.of.failures ~ Mode.1, data=df, las=1,main="Try identiy link function")
abline(coef(fit.identity), lty=2, lwd=2)
fit.identity <- lm(Number.of.failures ~ Mode.1, data=df)
plot(Number.of.failures ~ Mode.1, data=df, las=1,main="Try identiy link function")
abline(coef(fit.identity), lty=1, lwd=2)
?abline
?glm
fit.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2,family=poisson, data=df)
plot(Number.of.failures ~ Mode.1, data=df, las=1,main="Try identiy link function")
abline(coef(fit.identity), lty=1, lwd=2)
fit.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2,family=poisson, data=df)
plot(Number.of.failures ~ Mode.1 + Mode.2, data=df, las=1,main="Try identiy link function")
abline(coef(fit.identity), lty=1, lwd=2)
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, famlily=poisson(link="identity"))
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, famlily=poisson(link="identity"))
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, famlily=poisson)
fitted.identity <- glm(Number.of.failures ~ Mode.1, data=df, famlily=poisson)
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, family=poisson(link="identity"))
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, family=poisson(link="identity"))
anova(fitted.identity)
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, family=poisson(link="identity"))
anova(fitted.identity, test="F")
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, family=poisson(link="identity"))
anova(fitted.identity, test="F", digits=3)
fitted.identity <- glm(Number.of.failures ~ Mode.1 + Mode.2, data=df, family=poisson(link="identity"))
anova(fitted.identity, test="F")
fitted.identity <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=poisson(link="identity"))
anova(fitted.identity, test="F")
plot(x=log(df$Time.spent.in.Mode.2),y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=df$Time.spent.in.Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=df$TMode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
fitted.identity <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=gaussian(link="identity"))
anova(fitted.identity, test="F")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfcol=c(2,1))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfcol=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfcol=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures", xlim=5)
par(mfcol=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures", xlim=c(0,6)
par(mfcol=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures", xlim=c(0,6))
par(mfcol=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures", xlim=c(2,6))
par(mfcol=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
fitted.identity <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=gaussian(link="identity"))
anova(fitted.identity, test="F")
fitted.identity <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=gaussian)
anova(fitted.identity, test="F")
par(mfrow=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfrow=c(2,1))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfrow=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
?plot
?barplot
?boxplot
?gof
par(mfrow=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=df$Number.of.failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfrow=c(1,2))
plot(x=df$Mode.2,y=df$Number.of.failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(x=log(df$Mode.2),y=log(df$Number.of.failures),xlab="log(Time spent in Mode 2)",ylab="Number of failures")
plot(x=df$Number.of.failures,y=log(df$Time.spent.in.Mode.1), xlab="Time spent in Mode 1", ylab="Number of failures")
plot(x=df$Number.of.failures,y=log(df$Time.spent.in.Mode.1+1), xlab="Time spent in Mode 1", ylab="Number of failures")
Time.spent.Mode.1 <- c(33.3, 52.2, 64.7, 137, 125.9, 116.3, 131.7, 85, 91.9)
Time.spent.Mode.2 <- c(25.3, 14.4, 32.5, 20.5, 97.6, 53.6, 56.6, 87.3, 47.8)
Number.of.failures <- c(15,9,14,24,27,27,23,18,22)
df <- data.frame("Mode 1"= Time.spent.Mode.1, "Mode 2"= Time.spent.Mode.2, "Number of failures"=Number.of.failures)
df
plot(x=df$Number.of.failures,y=log(df$Time.spent.in.Mode.1), xlab="Time spent in Mode 1", ylab="Number of failures")
plot(x=df$Number.of.failures,y=df$Time.spent.in.Mode.1, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(x=df$Number.of.failures,y=log(df$Time.spent.in.Mode.1), xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Number.of.failures~log(Time.spent.in.Mode.1), data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Number.of.failures ~ log(Time.spent.in.Mode.1), data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Number.of.failures ~ log(Mode.1), data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Number.of.failures ~ Mode.1, data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
par(mfrow=c(1,2))
plot(Number.of.failures ~ Mode.2, data=df,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(log(Number.of.failures) ~ log(Mode.2), data=df,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfrow=c(1,2))
plot(Number.of.failures ~ Mode.2, data=df,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(Number.of.failures ~ log(Mode.2), data=df,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfrow=c(1,2))
plot(Number.of.failures ~ Mode.2, data=df,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(log(Number.of.failures) ~ log(Mode.2), data=df,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
plot(log(Number.of.failures) ~log(Mode.1), data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Number.of.failures ~log(Mode.1), data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Number.of.failures ~ Mode.1, data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(log(Number.of.failures) ~ log(Mode.1), data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
fitted.identity <- glm(Number.of.failures ~ log(Mode.1) + log(Mode.2), data=df, family=gaussian)
anova(fitted.identity, test="F")
fitted.identity <- glm(log(Number.of.failures) ~ log(Mode.1) + log(Mode.2), data=df, family=gaussian)
anova(fitted.identity, test="F")
fitted.identity <- glm(Number.of.failures ~ log(Mode.1) + log(Mode.2), data=df, family=gaussian)
anova(fitted.identity, test="F")
fitted.identity <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=gaussian)
anova(fitted.identity, test="F")
fitted.poisson <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=poisson(link="log"))
anova(fitted.poisson, test="F")
plot(Number.of.failures ~ Mode.1, data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
str(df)
summary(df)
deviance(fitted.identity)
df.residual(fitted.identity)
deviance(fitted.poisson)
df.residual(fitted.poisson)
fitted.poisson <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=poisson(link="log"))
anova(fitted.poisson, test="chisq")
fitted.poisson <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=poisson(link="log"))
anova(fitted.poisson, test="Chisq")
fitted.identity <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=gaussian)
anova(fitted.identity, test="F")
fitted.poisson <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=poisson(link="log"))
printCoefmat( coef( summary(fitted.poison)))
fitted.poisson <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=poisson(link="log"))
printCoefmat( coef( summary(fitted.poisson)))
deviance(fitted.poisson)
df.residual(fitted.poisson)
fitted.identity <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=gaussian)
printCoefmat( coef( summary(fitted.identity)))
fitted.identity <- lm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df)
printCoefmat( coef( summary(fitted.identity)))
fitted.identity <- lm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df)
coef( summary(fitted.identity))
fitted.identity <- lm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df)
printCoefmat( coef( summary(fitted.identity)))
m.qp <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
deviance(m.qp)
df.residual(m.qp)
m.qp <- glm(Number.of.failures ~ Mode.1, data=df, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
plot( cooks.distance(m.qp), type="h", las=1,ylab="Cook's distance, D", main="Cook's distance")
qqnorm( resid(m.qp), las=1,main="Normal Q-Q plot\ndeviance residuals")
qqline( resid(m.qp))
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
library(PASWR)
library(memisc)
Time.spent.Mode.1 <- c(33.3, 52.2, 64.7, 137, 125.9, 116.3, 131.7, 85, 91.9)
Time.spent.Mode.2 <- c(25.3, 14.4, 32.5, 20.5, 97.6, 53.6, 56.6, 87.3, 47.8)
Number.of.failures <- c(15,9,14,24,27,27,23,18,22)
df <- data.frame("Mode 1"= Time.spent.Mode.1, "Mode 2"= Time.spent.Mode.2, "Number of failures"=Number.of.failures)
df
summary(df)
plot(Number.of.failures ~ Mode.1, data=df, xlab="Time spent in Mode 1", ylab="Number of failures")
par(mfrow=c(1,2))
plot(Number.of.failures ~ Mode.2, data=df,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(log(Number.of.failures) ~ log(Mode.2), data=df,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
fitted.identity <- lm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df)
printCoefmat( coef( summary(fitted.identity)))
fitted.poisson <- glm(Number.of.failures ~ Mode.1 + log(Mode.2), data=df, family=poisson(link="log"))
printCoefmat( coef( summary(fitted.poisson)))
deviance(fitted.poisson)
df.residual(fitted.poisson)
m.qp <- glm(Number.of.failures ~ Mode.1, data=df, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
qqnorm( resid(m.qp), las=1,main="Normal Q-Q plot\ndeviance residuals")
qqline( resid(m.qp))
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
plot( cooks.distance(m.qp), type="h", las=1,ylab="Cook's distance, D", main="Cook's distance")
qqnorm( resid(m.qp), las=1,main="Normal Q-Q plot\ndeviance residuals")
qqline( resid(m.qp))
library(GLMsData)
data(failures)
failures
library(PASWR)
library(memisc)
library(GLMsData)
data(failures)
failures
plot(Failures ~ Time1, data=failures, xlab="Time spent in Mode 1", ylab="Number of failures")
data(failures)
failures
library(PASWR)
library(memisc)
library(GLMsData)
par(mfrow=c(1,2))
plot(Failures ~ Time2, data=failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(log(Failures) ~ log(Time2), data=failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
fitted.identity <- lm(Failures ~ Time1 + log(Time2), data=failures)
printCoefmat( coef( summary(fitted.identity)))
fitted.poisson <- glm(Failures ~ Time1 + log(Time2), data=failures, family=poisson(link="log"))
printCoefmat( coef( summary(fitted.poisson)))
deviance(fitted.poisson)
df.residual(fitted.poisson)
m.qp <- glm(Failures ~ Time1, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
plot( cooks.distance(m.qp), type="h", las=1,ylab="Cook's distance, D", main="Cook's distance")
qqnorm( resid(m.qp), las=1,main="Normal Q-Q plot\ndeviance residuals")
qqline( resid(m.qp))
data("ccancer")
ccancer
fitted(m.qp)
failures$Failures
sqrt(fitted(m.qp))
fitted(m.qp)
plot( resid(m.qp) ~ fitted(m.qp), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
fitted(m.qp)
resid(m.qp)
sqrt(fitted(m.qp))
sqrt(failures$Failures)
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
abline( coef(resid(m.qp) ~ sqrt(fitted(m.qp))), lty=1, lwd=2)
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
abline( coef(lm(resid(m.qp) ~ sqrt(fitted(m.qp)))), lty=1, lwd=2)
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
abline( coef(lm(resid(m.qp) ~ sqrt(fitted(m.qp)))), lty=2, lwd=2)
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
plot(Count ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
plot(Count~Gender, data=ccancer, xlab="Gender", ylab="Cancer number", las=1, main="Cancer rate against Gender")
?plot
plot(Count ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=0, main="Cancer rate against Geographic location")
plot(Count ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
plot(Count ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=0, main="Cancer rate against Geographic location")
plot(Count ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
plot(Count ~ Region + Site, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
plot(Lung ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
plot(Site  ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
plot(Count ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
ccancer$Count / ccancer$Population * 1000
plot(Count/Population *1000 ~ Region, data=ccancer, xlab="Region",ylab="Cancer number", las=1, main="Cancer rate against Geographic location")
plot(Count/Population*1000~Gender, data=ccancer, xlab="Gender", ylab="Cancer number", las=1, main="Cancer rate against Gender")
plot(Count/Population *1000 ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Count/Population*1000~Site, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(Count/Population*1000~Site, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
plot(Count/Population*1000~Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
plot(Count/Population*1000~Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
data("ccancer")
ccancer
plot(Count/Population *1000 ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Count/Population*1000~Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(Cancer.Rate ~ Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
})
plot( cooks.distance(m.qp), type="h", las=1,ylab="Cook's distance, D", main="Cook's distance")
par(mfrow=c(1,2))
plot(Failures ~ Time2, data=failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(log(Failures) ~ log(Time2), data=failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
par(mfrow=c(1,3))
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(Cancer.Rate ~ Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
})
par(mfrow=c(1,3))
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(log(Cancer.Rate) ~ Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
})
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(Cancer.Rate ~ Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
})
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(log(Cancer.Rate) ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(Cancer.Rate ~ Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
})
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(Cancer.Rate ~ Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
})
pearson.gof <- sum(m.qp$weights * m.qp$residuals^2)
tab <- data.frame(GoF.Statistic=c(m.qp$deviance, pearson.gof))
tab$DF <- rep(m.qp$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
fit <- m.qp
pearson.gof <- sum(fit$weights * fit$residuals^2)
tab <- data.frame(GoF.Statistic=c(fit$deviance, pearson.gof))
tab$DF <- rep(fit$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
fit <- fitted.poisson
pearson.gof <- sum(fit$weights * fit$residuals^2)
tab <- data.frame(GoF.Statistic=c(fit$deviance, pearson.gof))
tab$DF <- rep(fit$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
fit <- m.qp
pearson.gof <- sum(fit$weights * fit$residuals^2)
tab <- data.frame(GoF.Statistic=c(fit$deviance, pearson.gof))
tab$DF <- rep(fit$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
y <- c(15, 26, 4); x <- c(1/4, 1/2, 1/4)
fit <- glm( y ~ 0+x, family=poisson)
pearson.gof <- sum(fit$weights * fit$residuals^2)
tab <- data.frame(GoF.Statistic=c(fit$deviance, pearson.gof))
tab$DF <- rep(fit$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
plot(Failures ~ Time1, data=failures, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Failures ~ Time1, data=failures, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Failures ~ log(Time1), data=failures, xlab="Time spent in Mode 1", ylab="Number of failures")
plot(Failures ~ Time1, data=failures, xlab="Time spent in Mode 1", ylab="Number of failures")
m.qp <- glm(Failures ~ log(Time1), data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
m.qp <- glm(Failures ~ Time1, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
m.qp <- glm(Failures ~ log(Time1)+0, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
fit <- m.qp
pearson.gof <- sum(fit$weights * fit$residuals^2)
tab <- data.frame(GoF.Statistic=c(fit$deviance, pearson.gof))
tab$DF <- rep(fit$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
m.qp <- glm(Failures ~ Time1, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
fit <- m.qp
pearson.gof <- sum(fit$weights * fit$residuals^2)
tab <- data.frame(GoF.Statistic=c(fit$deviance, pearson.gof))
tab$DF <- rep(fit$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
m.p <- glm(Count/Population*1000 ~ Region + Gender + Site, family=Poisson(link="log"))
m.p <- glm(Count/Population*1000 ~ Region + Gender + Site, family=poisson(link="log"))p
m.p <- glm(Count/Population*1000 ~ Region + Gender + Site, family=poisson(link="log"))
m.p <- glm(Count/Population*1000 ~ Region + Gender + Site, data=ccancer, family=poisson(link="log"))
printCoefmat(coef(summary(m.p)), digits=3)
m.p <- glm(as.interger(Count/Population*1000000) ~ Region + Gender + Site, data=ccancer, family=poisson(link="log"))
m.p <- glm(as.integer(Count/Population*1000000) ~ Region + Gender + Site, data=ccancer, family=poisson(link="log"))
printCoefmat(coef(summary(m.p)), digits=3)
m.p <- glm(Count/Population ~ Region + Gender + Site, data=ccancer, family=poisson(link="log"))
printCoefmat(coef(summary(m.p)), digits=3)
m.p <- glm(Count ~ Region + Gender + Site + offset(log(Population)), data=ccancer, family=poisson(link="log"))
printCoefmat(coef(summary(m.p)), digits=3)
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
plot(Cancer.Rate ~ Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
})
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
})
library(PASWR)
library(memisc)
library(GLMsData)
data(failures)
failures
plot(Failures ~ Time1, data=failures, xlab="Time spent in Mode 1", ylab="Number of failures")
par(mfrow=c(1,2))
plot(Failures ~ Time2, data=failures,xlab="Time spent in Mode 2",ylab="Number of failures")
plot(log(Failures) ~ log(Time2), data=failures,xlab="log(Time spent in Mode 2)",ylab="Number of failures")
fitted.identity <- lm(Failures ~ Time1 + log(Time2), data=failures)
printCoefmat( coef( summary(fitted.identity)))
fitted.poisson <- glm(Failures ~ Time1 + log(Time2), data=failures, family=poisson(link="log"))
printCoefmat( coef( summary(fitted.poisson)))
deviance(fitted.poisson)
df.residual(fitted.poisson)
m.qp <- glm(Failures ~ Time1, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
fit <- m.qp
pearson.gof <- sum(fit$weights * fit$residuals^2)
tab <- data.frame(GoF.Statistic=c(fit$deviance, pearson.gof))
tab$DF <- rep(fit$df.residual, 2)
tab$P.Value <- pchisq(tab$GoF, df=tab$DF, lower.tail=FALSE)
row.names(tab) <- c("Deviance", "Pearson"); print(tab, digits=3)
plot( resid(m.qp) ~ sqrt(fitted(m.qp)), las=1, main="Deviance residuals", ylab="Deviance residuals",xlab="Square root of fitted values" )
plot( cooks.distance(m.qp), type="h", las=1,ylab="Cook's distance, D", main="Cook's distance")
qqnorm( resid(m.qp), las=1,main="Normal Q-Q plot\ndeviance residuals")
qqline( resid(m.qp))
data("ccancer")
ccancer
with(ccancer, {
Cancer.Rate <- Count/Population*1000
plot(Cancer.Rate ~ Region, data=ccancer, xlab="Region",ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Geographic location")
plot(Cancer.Rate ~ Gender, data=ccancer, xlab="Gender", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Gender")
})
plot(Count/Population*1000~Site, data=ccancer, xlab="Site", ylab="Cancer rate per thousand people", las=1, main="Cancer rate against Cancer Site")
m.p <- glm(Count ~ Region + Gender + Site + offset(log(Population)), data=ccancer, family=poisson(link="log"))
printCoefmat(coef(summary(m.p)), digits=3)
fitted.poisson <- glm(Failures ~ Time1 * log(Time2), data=failures, family=poisson(link="log"))
printCoefmat( coef( summary(fitted.poisson)))
fitted.poisson <- glm(Failures ~ Time1 + log(Time2), data=failures, family=poisson(link="log"))
printCoefmat( coef( summary(fitted.poisson)))
m.qp <- glm(Failures ~ Time1 * Time2, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
m.qp <- glm(Failures ~ Time1 * log(Time2), data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
m.qp <- glm(Failures ~ Time1 + log(Time2) + Time1:Time2, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
m.qp <- glm(Failures ~ Time1, data=failures, family=quasipoisson)
printCoefmat( coef( summary(m.qp)))
with(ccancer,{
Count.by.Site.Gender <- xtabs(Count ~ Gender + Site)
ftable(Count.by.Site.Gender)
})
with(ccancer,{
Count.by.Site.Gender <- xtabs(Count ~ Gender + Site)
Count.by.Site.Gender
#ftable(Count.by.Site.Gender)
})
with(ccancer,{
Count.by.Site.Gender <- xtabs(Count ~ Gender + Site)
Count.by.Site.Gender
})
