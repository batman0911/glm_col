with(ccancer,{
Count.by.Site.Gender <- xtabs(Count ~ Gender + Site)
Count.by.Site.Gender
#ftable(Count.by.Site.Gender)
})
with(ccancer,{
Count.by.Site.Gender <- xtabs(Count ~ Gender + Site)
Count.by.Site.Gender
})
install.packages("GLMsData")
library(GLMsData)
data(danishlc)
danishlc
#Mo hinh binomial
model1= glm(Cases/Pop~Age*City,family=binomial,weights=Pop,data=danishlc)
anova(model1,test="Chisq")
#=> Tu kiem dinh anova, ta thay co bien age co y nghia. Vi vay, ta chi giu lai bien age trong mo hinh
model2= glm(Cases/Pop~Age,family=binomial,weights=Pop,data=danishlc)
anova(model2,test="Chisq")
#Nhanxet: Chi co bien age co y nghia
#Mo hinh Poisson cho ty le
model3=glm(Cases~offset(log(Pop))+City*Age,family=poisson,data=danishlc)
anova(model3,test="Chisq")
#Tu anova, ta thay chi co bien age co y nghia. Vi vay ta chi giu lai bien age
model4=glm(Cases~offset(log(Pop))+Age,family=poisson,data=danishlc) #Bien off-set lun giu lai
anova(model4,test="Chisq")
#Note: Vay 2 mo hinh Poisson va binomial deu ra ket qua bien age co y nghia
#So sanh 2 mo binh bang AIC (hoac BIC)
AIC(model4)
AIC(model2)
#=> Vi AIC mo hinh 2 thap hon nen mo hinh 2 tot hon 1 chut
danishlc$Cases / danishlc$Pop
# Vi ty le cua cases/pop hầu hết dưới 1% nên thoả mãn giả thiết để binomial va poisson gan tuong duong nhau
10.10
data(nminer)
nminer
model1=glm(Minerab~Eucs+Area+Grazed+Shrubs+Bulokes,family=poisson,data=nminer)
anova(model1,test="Chisq")
#theo ket qua kd anova, bien giai thich Eucs va Area co y nghia trong viec giai thich so chim minerab (co anh huong den so con chim miner)
#xay dung mo hinh voi 2 bien
model2=glm(Minerab~Eucs+Area,family=poisson,data=nminer)
anova(model2,test="Chisq")
#2 So sanh 2 model voi nhau( vi model 2 la nested model cua model 1), dung anova:
anova(model2,model1,test="Chisq")#dua model nested vao trc
#Vi pvalue lon nen mo hinh nhieu bien ko tot hon => sd mo hinh it bien
#including a diagnostic analysis (Phan tich chuan doan):
#Can bieu do phan du, cook distance, QQ plot
#Bieu do 1: Residual plot:
plot( resid(model2) ~ sqrt(fitted(model2)), las=1,
main="Deviance residuals", ylab="Deviance residuals",
xlab="Square root of fitted values" )
#ko co pattern ro rang
#Bieu do 2: Cook's distance
plot( cooks.distance(model2), type="h", las=1,
ylab="Cook's distance, D", main="Cook's distance")
#Ko co quan sat nao co anh huong lon den ket qua cua mo hinh (influential observation)
#Bieu do 3: Q-Q plot
qqnorm( resid(model2), las=1,
main="Normal Q-Q plot\ndeviance residuals")
qqline( resid(model2))
#phan du gan phan phoi chuan
#b. Doi voi pp Poisson, Diem xap xi yen ngua chinh xac khi ma bien dem >=3 doi voi tung quan sat (page 372)
nminer$Minerab
#Vi nhieu quan sat <3 nen diem xap xi yen ngua trong truong hop nay ko chinh xac
10.11
data(cervical)
cervical
cervical$Rate <- cervical$Deaths / cervical$Wyears * 1000  # Rate per 1000
cervical$Age <- ordered(cervical$Age,  # Ensure age-order is preserved
levels=c("25to34", "35to44", "45to54", "55to64") )
#cervical$Country <- abbreviate(cervical$Country, 1)   # Abbreviate city names
matplot( xtabs( Deaths*1000/Wyears ~ Age+Country, data=cervical), pch=1:4, lty=1:4,#Wyears co the hieu la dan so
type="b", lwd=2, col="black", axes=FALSE, ylim=c(0, 25),
xlab="Age group", ylab="Cases/1000")
axis(side=1, at=1:4, labels=levels(cervical$Age))
axis(side=2, las=1); box()
legend("topleft", col="black", pch=1:4, lwd=2, lty=1:4, merge=FALSE,
legend=c("EngWales", "Belgium", "France", "Italy") )
#So luong ng chet boi ung thu cang lon khi tuoi cang cao
#Khi dung poisson de mo hinh hoa ty le, thi mo hinh co dang: logu=logT+bo+bjxj
#do he so cua logT=1 nen ta dung offset
model1=glm(Deaths~offset(log(Wyears))+Age*Country,family=poisson,data=cervical)
anova(model1, test = "Chisq")
c#Ca 3 bien deu co y nghia thong ke khi giai thich cho so ng chet vi ung thu
#Bieu do 1: Residual plot cua mh Poisson:
plot( resid(model1) ~ sqrt(fitted(model1)), las=1,
main="Deviance residuals", ylab="Deviance residuals",
xlab="Square root of fitted values" )
# Co pattern
plot( rstandard(model1) ~ fitted(model1), main="Poisson glm" )
##Dung quasi-poisson cho mo hinh tren
model2=glm(Deaths~offset(log(Wyears))+Age+Country,family=quasipoisson,data=cervical)#chu y: trong quassi ko them bien tuong tac
anova(model2, test = "F")
#vay vien age va country co y nghia tke giai thich cho so ng chet vi ung thu
#Bieu do 2: Residual plot cua mh Poisson:
plot( resid(model2) ~ sqrt(fitted(model2)), las=1,
main="Deviance residuals", ylab="Deviance residuals",
xlab="Square root of fitted values" )
#ko co pattern ro ret
##Dung negative binominal cho mo hinh tren
install.packages("MASS")
library(MASS)
model3.nb <- glm.nb(Deaths ~ offset(log(Wyears))+Age+Country, data=cervical )
model3.nb <-glm.convert(model3.nb)
printCoefmat(coef(summary(model3.nb, dispersion=1)))
anova(model3.nb,test="F")
#Bieu do 3: Residual plot cua mh NB:
plot( resid(model3.nb) ~ sqrt(fitted(model3.nb)), las=1,
main="Deviance residuals", ylab="Deviance residuals",
xlab="Square root of fitted values" )
#ko co pattern ro ret
#So sanh 3 mo hinh: Poisson, Quasi Poisson, NB
AIC(model1) #154
AIC(model2)
AIC(model3.nb) #216
#AIC cua model1 nho hon, mo hinh Poisson tot hon NB
10.12
data(dwomen)
dwomen
model1=glm(Counts~Depression+SLE+Children,family=poisson,data=dwomen)
anova(model1, test = "F")
library(GLMsData)
data(danishlc)
danishlc
#Mo hinh binomial
model1= glm(Cases/Pop~Age*City,family=binomial,weights=Pop,data=danishlc)
library(GLMsData)
data(danishlc)
danishlc
#Mo hinh binomial
model1= glm(Cases/Pop~Age*City,family=binomial,weights=Pop,data=danishlc)
anova(model1,test="Chisq")
#=> Tu kiem dinh anova, ta thay co bien age co y nghia. Vi vay, ta chi giu lai bien age trong mo hinh
model2= glm(Cases/Pop~Age,family=binomial,weights=Pop,data=danishlc)
anova(model2,test="Chisq")
install.packages("GLMsData")
install.packages("GLMsData")
#=> Tu kiem dinh anova, ta thay co bien age co y nghia. Vi vay, ta chi giu lai bien age trong mo hinh
model2= glm(Cases/Pop~Age,family=binomial,weights=Pop,data=danishlc)
anova(model2,test="Chisq")
#Nhanxet: Chi co bien age co y nghia
#Mo hinh Poisson cho ty le
model3=glm(Cases~offset(log(Pop))+City*Age,family=poisson,data=danishlc)
anova(model3,test="Chisq")
#Tu anova, ta thay chi co bien age co y nghia. Vi vay ta chi giu lai bien age
model4=glm(Cases~offset(log(Pop))+Age,family=poisson,data=danishlc) #Bien off-set lun giu lai
anova(model4,test="Chisq")
#Note: Vay 2 mo hinh Poisson va binomial deu ra ket qua bien age co y nghia
#So sanh 2 mo binh bang AIC (hoac BIC)
AIC(model4)
#bai 8.12
library(GLMsData)
data(nambeware)
plot(Price~Diam, data=nambeware)
nware <- glm(Price~log(Diam), data=nambeware,
family = Gamma(link=log), subset=(-11))
summary(nware)
plot(rstandard(nware)~log(fitted(nware)))
plot(cooks.distance(nware), type="h")
colSums(influence.measures(nware)$is.inf)
qqnorm(rstandard(nware))
qqline(rstandard(nware))
library(statmod)
qqnorm(qresid(nware))
install.packages(statmod)
??statmod
#bai 8.11
library(GLMsData)
data("blocks")
blok <- glm(Number ~ Age, data=blocks,
family=poisson)
par(mfrow=c(2,2))
#plot(qresid(blok) ~ blocks$Age)
plot(qresid(blok) ~ sqrt(fitted(blok)))
plot(cooks.distance(blok), type="h")
qqnorm(rstandard(blok))
qqline(rstandard(blok))
qqnorm(qresid(blok))
qqline(qresid(blok))
colSums(influence.measures(blok)$is.inf)
??qresid
install.packages("statmod")
install.packages("statmod")
install.packages("statmod")
install.packages("statmod")
install.packages("statmod")
install.packages("statmod")
install.packages(statmod)
install.packages(statmod)
install.packages("statmod")
install.packages('statmod')
install.package('statmod')
install.packages('statmod')
install.packages("https://cran.r-project.org/src/contrib/statmod_1.4.36.tar.gz", response=NULL)
install.packages("statmod")
?colSums
data(nambeware)
head(nambeware)
summary(nambeware)
#bai 8.12
library(GLMsData)
data(nambeware)
plot(Price~Diam, data=nambeware)
nware <- glm(Price~log(Diam), data=nambeware,
family = Gamma(link=log), subset=(-11))
summary(nware)
plot(rstandard(nware)~log(fitted(nware)))
plot(cooks.distance(nware), type="h")
colSums(influence.measures(nware)$is.inf)
qqnorm(rstandard(nware))
plot(cooks.distance(nware), type="h")
library(statmod)
qqnorm(qresid(nware))
qqline(qresid(nware))
plot(rstandard(nware)~log(nambeware$Diam))
plot(hatvalues(nware), type="h")
#plot(qresid(blok) ~ blocks$Age)
plot(qresid(blok) ~ sqrt(fitted(blok)))
plot(cooks.distance(blok), type="h")
qqnorm(rstandard(blok))
qqline(rstandard(blok))
qqnorm(qresid(blok))
qqline(qresid(blok))
colSums(influence.measures(blok)$is.inf)
?influence.measures
install.packages("knitr")
library(knitr)
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("knitr")
install.packages("knitr")
library(knitr)
install.packages("tinytex")
tinytex::install_tinytex()
library(GLMsData)
library(PASWR)
library(memisc)
install.packages("memisc")
library(PASWR)
library(memisc)
library(GLMsData)
data("cervical"); str(cervical)
data("cervical"); str(cervical)
fit <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
summary(fit)
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
plot(fit(fit.quasi), resid(fit.quasi))
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
plot(fitted(fit.quasi), resid(fit.quasi))
library(statmod)
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
plot(fitted(fit.quasi), resid(fit.quasi))
qqnorm(qresid(fit.quasi))
qqline(qresid(fit.quasi))
cookd(fit.quasi)
cooks.distance(fit.quasi)
plot(cooks.distance(fit.quasi))
cooks.distance(fit.quasi)
fit.nev <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = Negate())
fit.nev <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = negative.binomial())
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
plot(fitted(fit.quasi), resid(fit.quasi))
qqnorm(qresid(fit.quasi))
qqline(qresid(fit.quasi))
#fit.nev <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = negative.binomial())
#summary(fit.nev)
plot(cooks.distance(fit.quasi))
#fit.nev <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = negative.binomial())
#summary(fit.nev)
plot(cooks.distance(fit.quasi), type="h")
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
plot(fitted(fit.quasi), resid(fit.quasi))
qqnorm(qresid(fit.quasi))
qqline(qresid(fit.quasi))
#fit.nev <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = negative.binomial())
#summary(fit.nev)
plot(cooks.distance(fit.quasi), type="h")
#fit.nev <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = negative.binomial())
#summary(fit.nev)
plot(cooks.distance(fit.poi), type="h")
data("cervical"); str(cervical)
fit.nev <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = negative.binomial())
fit.nev <- glm.nb(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = negative.binomial())
library(MASS, lib.loc = "/usr/lib/R/library")
fit.nev <- glm.nb(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical)
summary(fit.nev)
anova(fit.nev, dispersion = 1, test = "Chisq")
anova(fit.nev, test = "Chisq")
summary(fit.nev)
pchisq(deviance(fit.nev), df.residual(fit.nev), lower.tail = FALSE)
summary(fit.nev)
deviance(fit.nev)
pchisq(deviance(fit.nev), df.residual(fit.nev), lower.tail = FALSE)
data("cervical"); str(cervical)
fit.poi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = poisson())
fit.quasi <- glm(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical, family = quasipoisson())
summary(fit.quasi)
plot(fitted(fit.quasi), resid(fit.quasi))
qqnorm(qresid(fit.quasi))
qqline(qresid(fit.quasi))
fit.nev <- glm.nb(Deaths ~ offset(log(Wyears)) + Age + Country, data = cervical)
summary(fit.nev)
plot(cooks.distance(fit.poi), type="h")
anova(fit.nev, test = "Chisq")
p.nev <- pchisq(deviance(fit.nev), df.residual(fit.nev), lower.tail = FALSE)
p.poi <- pchisq(deviance(fit.poi), df.residual(fit.poi), lower.tail = FALSE)
c(p.poi, p.nev)
AIC(p.poi)
extractAIC(p.poi)
extractAIC(fit.poi)
library(GLMsData)
data("shuttles")
#a
plot(Damaged~Temp, data=shuttles)
#b
shuttles$DamagedProp <- shuttles$Damaged/6
m<-glm(DamagedProp~Temp, data=shuttles, weights = rep(6,length(Temp)),
family=binomial)
summary(m)
#c
library(statmod)
plot(qresid(m)~fitted(m))
plot(cooks.distance(m), type = "h")
qqnorm(qresid(m)); qqline(qresid(m))
colSums(influence.measures(m)$is.inf)
#d
p<-predict(m,newdata = data.frame(Temp=31), type="response")
p #0.8177744
#e
library(MASS)
ed <- dose.p(m)
ed #43.98725
#tai nhiet do 43.99F, 50% Oring break.
library(GLMsData)
data("shuttles")
#a
plot(Damaged~Temp + 0, data=shuttles)
#b
shuttles$DamagedProp <- shuttles$Damaged/6
m<-glm(DamagedProp~Temp, data=shuttles, weights = rep(6,length(Temp)),
family=binomial)
summary(m)
#c
library(statmod)
plot(qresid(m)~fitted(m))
plot(cooks.distance(m), type = "h")
qqnorm(qresid(m)); qqline(qresid(m))
colSums(influence.measures(m)$is.inf)
#d
p<-predict(m,newdata = data.frame(Temp=31), type="response")
p #0.8177744
#e
library(MASS)
ed <- dose.p(m)
ed #43.98725
#tai nhiet do 43.99F, 50% Oring break.
library(GLMsData)
data("shuttles")
#a
plot(Damaged~Temp, data=shuttles)
#b
shuttles$DamagedProp <- shuttles$Damaged/6
m<-glm(DamagedProp~Temp, data=shuttles, weights = rep(6,length(Temp)),
family=binomial)
summary(m)
#c
library(statmod)
plot(qresid(m)~fitted(m))
plot(cooks.distance(m), type = "h")
qqnorm(qresid(m)); qqline(qresid(m))
colSums(influence.measures(m)$is.inf)
#d
p<-predict(m,newdata = data.frame(Temp=31), type="response")
p #0.8177744
#e
library(MASS)
ed <- dose.p(m)
ed #43.98725
#tai nhiet do 43.99F, 50% Oring break.
library(GLMsData)
data("shuttles")
#a
plot(Damaged~Temp, data=shuttles)
#b
shuttles$DamagedProp <- shuttles$Damaged/6
m<-glm(DamagedProp~Temp + 0, data=shuttles, weights = rep(6,length(Temp)),
family=binomial)
summary(m)
#c
library(statmod)
plot(qresid(m)~fitted(m))
plot(cooks.distance(m), type = "h")
qqnorm(qresid(m)); qqline(qresid(m))
colSums(influence.measures(m)$is.inf)
#d
p<-predict(m,newdata = data.frame(Temp=31), type="response")
p #0.8177744
#e
library(MASS)
ed <- dose.p(m)
library(GLMsData)
data("shuttles")
#a
plot(Damaged~Temp, data=shuttles)
#b
shuttles$DamagedProp <- shuttles$Damaged/6
m<-glm(DamagedProp~Temp, data=shuttles, weights = rep(6,length(Temp)),
family=binomial)
summary(m)
#c
library(statmod)
plot(qresid(m)~fitted(m))
plot(cooks.distance(m), type = "h")
qqnorm(qresid(m)); qqline(qresid(m))
colSums(influence.measures(m)$is.inf)
#d
p<-predict(m,newdata = data.frame(Temp=31), type="response")
p #0.8177744
#e
library(MASS)
ed <- dose.p(m)
ed #43.98725
#tai nhiet do 43.99F, 50% Oring break.
library(GLMsData)
data("belection")
belection$F.prop <- belection$Females/(belection$Females+belection$Males)
belection$Total <- belection$Females+belection$Males
par(mfrow=c(1,2))
#a
plot(F.prop~Party, data=belection)
#b
plot(F.prop~Region, data=belection)
#c
m <- glm(F.prop~Party+Region, data=belection,
family=binomial, weights=Total)
summary(m)
#d
anova(m,test="Chisq")
#Resid. Dev >> Resid.Df => dau hieu overdispersion
#6
odd.cons <- exp(coef(m)[1])
odd.cons
odd.lab <-exp(coef(m)[1])*exp(coef(m)[3])
odd.lab
or <- odd.cons/odd.lab
or
#7
min(belection$Females) #0<3
min(belection$Males) #6>=3
#=> khong thoa man saddle point approximation
plot(cooks.distance(fit.poi), type="h")
plot(cooks.distance(fit.infl), type="h")
fit.infl <- update(fit.poi, subset(-1))
fit.infl <- update(fit.poi, subset = -1)
plot(cooks.distance(fit.infl), type="h")
p.nev <- pchisq(deviance(fit.nev), df.residual(fit.nev), lower.tail = FALSE)
p.poi <- pchisq(deviance(fit.poi), df.residual(fit.poi), lower.tail = FALSE)
p.infl <- pchisq(deviance(fit.infl), df.residual(fit.infl), lower.tail = FALSE)
c(p.poi, p.nev, p.infl)
knitr::opts_chunk$set(echo = TRUE)
data("nambeware"); str(nambeware)
plot(Price ~ Time, data = nambeware)
plot(Price ~ Diam, data = nambeware)
plot(Price ~ Type, data = nambeware)
hist(nambeware$Price)
fit.log <- glm(Price ~ Time + Diam + Type, data = nambeware, family = "Gamma", link = "log")
data("nambeware"); str(nambeware)
hist(nambeware$Price) # using gamma
par(mfrow = c(1, 3))
plot(Price ~ Time, data = nambeware)
plot(Price ~ Diam, data = nambeware)
plot(Price ~ Type, data = nambeware)
fit.log <- glm(Price ~ Time + Diam + Type, data = nambeware, family = Gamma(link = "log"))
fit.id <- update(fit.log, family = Gamma(link = "identity"))
summary(fit.log)
anova(fit.log, test = "F")
anova(fit.id, test = "F")
data("nambeware"); str(nambeware)
hist(nambeware$Price) # using gamma
par(mfrow = c(1, 3))
plot(Price ~ Time, data = nambeware)
plot(Price ~ Diam, data = nambeware)
plot(Price ~ Type, data = nambeware)
fit.log <- glm(Price ~ Time + Diam + Type, data = nambeware, family = Gamma(link = "log"))
fit.id <- update(fit.log, family = Gamma(link = "identity"))
anova(fit.log, test = "F")
anova(fit.id, test = "F")
extractAIC(fit.log)
extractAIC(fit.id)
